 nullptr = -1
rootptr = freeptr =0
Tree = []

def initiallise():
    global Treenode, nullptr, rootptr, freeptr, Tree
    rootptr = nullptr
    freeptr=0
    for index in range(5):
        Tree.append(Treenode("", index+1, nullptr))
    Tree[4].leftptr = nullptr

def insertnode(newitem):
     global Treenode, nullptr, rootptr, freeptr, Tree
     previousnode = thisnode = newnode = 0
     Turnedleft = False

     if freeptr == nullptr:
         print("overflow no space ")
     else:
        newnode =freeptr
        Tree[newnode].Data = newitem
        freeptr = Tree[freeptr].leftptr
        Tree[newnode].leftptr = -1

        if rootptr == nullptr:
            rootptr = newnode
        else:
            thisnode=rootptr
            while thisnode != nullptr:
                previousnode = thisnode
                if Tree[thisnode].Data > newitem:
                    turnedleft = True
                    thisnode = Tree[thisnode].leftptr
                else:
                     turnedleft = False
                     thisnode = Tree[thisnode].rightptr

            if turnedleft:
                Tree[previousnode].leftptr = newnode
            else:
                Tree[previousnode].rightptr = newnode

def findnode(searchitem):
    global Treenode, nullptr, rootptr, freeptr, Tree
    thisnodeptr = rootptr
    while (thisnodeptr!= nullptr and Tree[thisnodeptr].Data != searchitem):
        if Tree[thisnodeptr].Data > searchitem:
            thisnodeptr = Tree[thisnodeptr].leftptr
        else:
            thisnodeptr = Tree[thisnodeptr].rightptr

    return thisnodeptr

def traverse(rootptr):
    global Treenode, nullptr, freeptr, Tree
    if rootptr != nullptr:
        traverse(Tree[rootptr].leftptr)
        print(Tree[rootptr].Data)
        traverse(Tree[rootptr].rightptr)

def getoption():
    print("1: Add data\n2: Find data\n3: Traverse Tree\n4: end")
    choice = int(input("enter choice "))
    return choice

class Treenode:
    def __init__(self, Data, leftptr, rightptr):
        self.Data = Data
        self.leftptr = leftptr
        self.rightptr = rightptr


initiallise()
choice = getoption()

while choice != 4:
    if choice == 1:
        Data = input("Enter the value: ")
        insertnode(Data)
        traverse(rootptr)
    elif choice == 2:
        Data = input("Enter search value: ")
        thisnodeptr = findnode(Data)
        if thisnodeptr == nullptr:
            print("Value not found")
        else:
            print("value found at:", thisnodeptr)
        for i in range(5):
            print(i, Tree[i].leftptr, Tree[i].Data, Tree[i].rightptr)
    elif choice == 3:
        traverse(rootptr)
    choice = getoption()

 
